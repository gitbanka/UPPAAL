<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
int[0,1] req1, req2;
int[1,2] turn;</declaration>
	<template>
		<name x="5" y="5">Mutex</name>
		<parameter>const int[1,2] me, int[0,1]&amp;req_self, int[0,1]&amp;req_other</parameter>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="76" y="-25">
			<name x="66" y="-59">idle</name>
		</location>
		<location id="id1" x="306" y="-25">
			<name x="296" y="-59">want</name>
		</location>
		<location id="id2" x="306" y="153">
			<name x="323" y="153">wait</name>
		</location>
		<location id="id3" x="76" y="153">
			<name x="42" y="144">CS</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="assignment" x="0" y="42">req_self:=0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="110" y="127">turn==me &amp;&amp; req_other==1</label>
			<nail x="272" y="153"/>
			<nail x="213" y="153"/>
			<nail x="136" y="153"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="assignment" x="314" y="51">turn:=(me==1?2:1)</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="144" y="-51">req_self:=1</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
p1 = Mutex(1,req1,req2);
p2 = Mutex(2,req2,req1);
// List one or more processes to be composed into a system.
system p1,p2;
    </system>
	<queries>
		<query>
			<formula>A[]not(p1.CS and p2.CS)</formula>
			<comment>p1 and p2 cannot be in CS at the same time</comment>
		</query>
		<query>
			<formula>E&lt;&gt;p1.CS</formula>
			<comment>Eventually p1 enters in CS</comment>
		</query>
		<query>
			<formula>E&lt;&gt;p2.CS</formula>
			<comment>p2 can enter in CS eventually</comment>
		</query>
		<query>
			<formula>A[]not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] p1.CS imply not(p2.CS)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] p2.CS imply not(p1.CS)</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
